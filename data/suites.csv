"Status","Start Time","Stop Time","Duration in ms","Parent Suite","Suite","Sub Suite","Test Class","Test Method","Name","Description"
"passed","Tue Nov 19 20:04:19 ICT 2024","Tue Nov 19 20:04:19 ICT 2024","187","","Email Service Test","","com.services.EmailServiceTest","sendMail_shouldSendEmail","Send Email - Send Email",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","7","","Pond Service Test","","com.services.IPondServiceTest","deletePond_shouldThrowNotFoundException_whenPondNotFound","Delete Pond - Should throw NotFound when pond not found",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","9","","Product Service Test","","com.services.ProductServiceTest","getProduct_ShouldReturnProduct_WhenExists","Get Product - Return product when product exists",""
"passed","Tue Nov 19 20:04:25 ICT 2024","Tue Nov 19 20:04:25 ICT 2024","14","","User Service Tests","","com.services.UserServiceTest","deleteUser_ShouldThrowNotFoundException_WhenUserDoesNotExist","Delete User - Should throw NotFoundException when user does not exist",""
"passed","Tue Nov 19 20:04:23 ICT 2024","Tue Nov 19 20:04:23 ICT 2024","63","","Order Service Test","","com.services.OrderServiceTest","createOrder_ShouldThrowBadRequestException_WhenCartHasDisabledItems","Create Order - Should throw BadRequest when cart has disabled items",""
"passed","Tue Nov 19 20:04:17 ICT 2024","Tue Nov 19 20:04:17 ICT 2024","17","","Blog Service Tests","","com.services.BlogServiceTest","getBlogBySlug_shouldThrowNotFound_whenNoBlogFound","Get Blog By Slug - Should throw NotFoundException when no blog is found",""
"passed","Tue Nov 19 20:04:25 ICT 2024","Tue Nov 19 20:04:25 ICT 2024","9","","User Service Tests","","com.services.UserServiceTest","updateUser_ShouldUpdateUser_WhenUserExists","Update User - Should update user when user exists",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","16","","Cart Service Test","","com.services.CartServiceTest","clearCart_shouldClearCart_whenExists","Clear Cart - Should clear cart when exists",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","407","","Image Service Test","","com.services.ImageServiceTest","getDefaultImage_shouldReturnDefaultImageUrl","Get Default Image - Should return default image URL",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","9","","Pond Service Test","","com.services.IPondServiceTest","getPond_shouldReturnPond","Get Pond - Should return pond",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","12","","Cart Service Test","","com.services.CartServiceTest","deleteCart_shouldDeleteCart_whenExists","Delete Cart - Should delete cart when exists",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","11","","Image Service Test","","com.services.ImageServiceTest","uploadImage_shouldThrowException_whenFileIsEmpty","Upload Image - Should throw exception when file is empty",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","9","","Cart Service Test","","com.services.CartServiceTest","deleteCart_shouldThrowNotFound_whenCartDoesNotExist","Delete Cart - Should throw NotFound when cart does not exist",""
"passed","Tue Nov 19 20:04:19 ICT 2024","Tue Nov 19 20:04:19 ICT 2024","5","","Feedback Service Test","","com.services.FeedbackServiceTest","createFeedback_shouldSaveFeedback","Create feedback - Should save feedback",""
"passed","Tue Nov 19 20:04:25 ICT 2024","Tue Nov 19 20:04:25 ICT 2024","4","","User Service Tests","","com.services.UserServiceTest","getUser_ShouldReturnUser_WhenUserExists","Get User - Should return user when user exists",""
"passed","Tue Nov 19 20:04:19 ICT 2024","Tue Nov 19 20:04:19 ICT 2024","251","","Feedback Service Test","","com.services.FeedbackServiceTest","createFeedback_shouldThrowNotFoundException_whenUserOrProductNotFound","Create feedback - Should throw NotFoundException when user or product not found",""
"passed","Tue Nov 19 20:04:23 ICT 2024","Tue Nov 19 20:04:23 ICT 2024","0","","Order Service Test","","com.services.OrderServiceTest","createOrder_ShouldCreateOrder_WhenCartIsValid","Create Order - Should create order when cart is valid",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","7","","Package Service Test","","com.services.PackageServiceTest","checkPondLimit_ShouldReturnFalse_WhenPondCountExceedsLimit","Check Pond Limit - Should return false when pond exceeds limit",""
"passed","Tue Nov 19 20:04:19 ICT 2024","Tue Nov 19 20:04:19 ICT 2024","5","","Feedback Service Test","","com.services.FeedbackServiceTest","getFeedbacksByProductId_shouldReturnFeedbacks","Get feedback by product ID",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","11","","Koi Fish Service Test","","com.services.IKoiFishServiceTest","getKoiFish_shouldThrowNotFoundException_whenKoiFishNotFound","Get Koi Fish - Should throw NotFound when koi fish not found",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","14","","Image Service Test","","com.services.ImageServiceTest","imageExists_shouldReturnFalseIfImageDoesNotExist","Image Exists - Should return false if image does not exist",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","15","","Product Service Test","","com.services.ProductServiceTest","getProduct_ShouldThrowNotFoundException_WhenNotExists","Get Product - Throw NotFoundException when product does not exist",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","7","","Package Service Test","","com.services.PackageServiceTest","getAllPackages_ShouldReturnListOfPackages","Get Package - Should return list of packages",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","8","","Water Parameter Service Test","","com.services.IWaterParameterServiceTest","getWaterParameterByPondId_shouldReturnWaterParameter","Get Water Parameter - Return water parameter",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","7","","Package Service Test","","com.services.PackageServiceTest","checkFishLimit_ShouldReturnTrue_WhenFishCountMeetsLimit","Check Fish Limit - Should return true when fish meet limit",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","397","","Pond Service Test","","com.services.IPondServiceTest","deletePond_shouldDeletePond","Delete Pond - Should delete pond",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","18","","Category Service Test","","com.services.CategoryServiceTest","getCategoryById_shouldThrowNotFound_whenCategoryDoesNotExist","Get Category By Id - Should throw NotFound when category does not exist",""
"passed","Tue Nov 19 20:04:25 ICT 2024","Tue Nov 19 20:04:25 ICT 2024","4","","User Service Tests","","com.services.UserServiceTest","getUser_ShouldThrowNotFoundException_WhenUserDoesNotExist","Get User - Should throw NotFoundException when user does not exist",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","25","","Product Service Test","","com.services.ProductServiceTest","updateProduct_ShouldUpdateProduct_WhenProductExists","Update Product - Should update product when products exist",""
"passed","Tue Nov 19 20:04:23 ICT 2024","Tue Nov 19 20:04:23 ICT 2024","13","","Order Service Test","","com.services.OrderServiceTest","createOrder_ShouldThrowNotFoundException_WhenCartIsEmpty","Create Order - Should throw NotFound when cart is empty",""
"passed","Tue Nov 19 20:04:20 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","20","","Koi Fish Service Test","","com.services.IKoiFishServiceTest","deleteKoiFish_shouldDeleteKoiFish","Delete Koi Fish - Should delete koi fish",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","8","","Cart Service Test","","com.services.CartServiceTest","createCart_shouldThrowBadRequest_whenInsufficientStock","Create Cart - Should throw BadRequest when insufficient stock",""
"passed","Tue Nov 19 20:04:23 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","323","","Package Service Test","","com.services.PackageServiceTest","getPackageById_ShouldReturnPackage_WhenExists","Get Package - Should return package when exists",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","8","","Cart Service Test","","com.services.CartServiceTest","createCart_shouldSaveCart_whenValidInput","Create Cart - Should save cart when valid input",""
"passed","Tue Nov 19 20:04:20 ICT 2024","Tue Nov 19 20:04:20 ICT 2024","7","","Koi Fish Service Test","","com.services.IKoiFishServiceTest","addKoiFish_shouldThrowNotFoundException_whenUserNotFound","Add Koi Fish - Should throw NotFound when user not found",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","16","","Category Service Test","","com.services.CategoryServiceTest","getAllCategories_shouldReturnCategories","Get All Categories - Should return categories",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","5","","Water Parameter Service Test","","com.services.IWaterParameterServiceTest","deleteWaterParameter_shouldThrowNotFoundException_whenParameterNotFound","Delete Water Parameter - Should throw NotFound when parameter not found",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","9","","Product Service Test","","com.services.ProductServiceTest","isProductIsDisabledFromCart_ShouldReturnFalse_WhenNoDisabledProducts","Disable Product From Cart - Should return false when no disabled products",""
"passed","Tue Nov 19 20:04:25 ICT 2024","Tue Nov 19 20:04:25 ICT 2024","12","","User Service Tests","","com.services.UserServiceTest","deleteUser_ShouldDeleteUser_WhenUserExists","Delete User - Should delete user when user exists",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","7","","Pond Service Test","","com.services.IPondServiceTest","addPond_shouldThrowAlreadyExistedException_whenPondNameExists","Add Pond - Should throw AlreadyExisted when pond name exists",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","11","","Product Service Test","","com.services.ProductServiceTest","deleteProduct_ShouldDeleteProduct_WhenProductExists","Delete Product - Should delete product when product exists",""
"passed","Tue Nov 19 20:04:23 ICT 2024","Tue Nov 19 20:04:23 ICT 2024","467","","Order Service Test","","com.services.OrderServiceTest","getOrderById_ShouldReturnOrder_WhenExists","Get Order by ID - Should return null when order does not exist",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","6","","Water Parameter Service Test","","com.services.IWaterParameterServiceTest","deleteWaterParameter_shouldDeleteWaterParameter","Delete Water Parameter - Should delete water parameter",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","322","","Water Parameter Service Test","","com.services.IWaterParameterServiceTest","saveWaterParameter_shouldSaveNewWaterParameter","Save Water Parameters - should save water parameters",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","0","","Category Service Test","","com.services.CategoryServiceTest","deleteCategory_shouldThrowNotFound_whenCategoryDoesNotExist","Delete Category - Should throw NotFound when category does not exist",""
"passed","Tue Nov 19 20:04:25 ICT 2024","Tue Nov 19 20:04:25 ICT 2024","312","","User Service Tests","","com.services.UserServiceTest","updatePassword_ShouldUpdatePassword_WhenUserExists","Update Password - Should update password when user exists",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","14","","Koi Fish Service Test","","com.services.IKoiFishServiceTest","getKoiFish_shouldReturnKoiFish","Get Koi Fish - Should Return koi fish",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","15","","Category Service Test","","com.services.CategoryServiceTest","getCategoryById_shouldReturnCategory_whenExists","Get Category By Id - Should return category",""
"passed","Tue Nov 19 20:04:17 ICT 2024","Tue Nov 19 20:04:17 ICT 2024","18","","Blog Service Tests","","com.services.BlogServiceTest","createBlog_shouldThrowBadRequest_whenTitleExists","Create Blog - Should throw BadRequestException when title exists",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","83","","Image Service Test","","com.services.ImageServiceTest","updateImage_shouldThrowException_whenImageDoesNotExist","Update Image - Should update image",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","5","","Water Parameter Service Test","","com.services.IWaterParameterServiceTest","getWaterParameterByPondId_shouldThrowNotFoundException_whenParameterNotFound","Get Water Parameter - Should throw NotFound when parameter not found",""
"passed","Tue Nov 19 20:04:19 ICT 2024","Tue Nov 19 20:04:19 ICT 2024","5","","Feedback Service Test","","com.services.FeedbackServiceTest","getAll_shouldReturnAllFeedbacks","Get all feedbacks",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:25 ICT 2024","285","","Sheduled Tasks Service Test","","com.services.ScheduledTasksServiceTest","simulatorDeliveredOrders_ShouldUpdateOrderStatus","Simulator Delivered Order - Update order status",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","10","","Product Service Test","","com.services.ProductServiceTest","isProductIsDisabledFromCart_ShouldReturnTrue_WhenDisabledProductExists","Disable Product From Cart - Should return true when disabled",""
"passed","Tue Nov 19 20:04:17 ICT 2024","Tue Nov 19 20:04:17 ICT 2024","28","","Blog Service Tests","","com.services.BlogServiceTest","updateBlog_shouldThrowNotFound_whenBlogDoesNotExist","Update Blog - Should throw NotFoundException when blog does not exist",""
"passed","Tue Nov 19 20:04:19 ICT 2024","Tue Nov 19 20:04:19 ICT 2024","8","","Dashboard Service Test","","com.services.DashboardServiceTest","getTotalSales_shouldReturnTotalSalesData","Get Total Sales - Return total sales data",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","8","","Package Service Test","","com.services.PackageServiceTest","createPackage_ShouldThrowException_WhenDefaultPackageExists","Create Package - Should throw exception when default package exists",""
"passed","Tue Nov 19 20:03:35 ICT 2024","Tue Nov 19 20:04:16 ICT 2024","40777","","Blog Service Tests","","com.services.BlogServiceTest","deleteBlog_shouldDeleteBlog_whenExists","Delete Blog - Should delete blog when it exists",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","137","","Product Service Test","","com.services.ProductServiceTest","createProduct_ShouldSaveProduct_WhenImageIsProvided","Create Product - Save product when image is provided",""
"passed","Tue Nov 19 20:04:19 ICT 2024","Tue Nov 19 20:04:19 ICT 2024","6","","Dashboard Service Test","","com.services.DashboardServiceTest","getTopSellingProducts_shouldReturnTopSellingProducts","Get Top Selling Products - Return top selling products data",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","11","","Pond Service Test","","com.services.IPondServiceTest","updatePond_shouldThrowNotFoundException_whenUserNotFound","Update Pond - Should throw NotFound when user not found",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","6","","Water Parameter Service Test","","com.services.IWaterParameterServiceTest","saveWaterQualityStandard_shouldSaveQualityStandard","Save Water Parameter - Should save water parameter",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","90","","Image Service Test","","com.services.ImageServiceTest","imageExists_shouldReturnTrueIfImageExists","Image Exists - Should return true if image exists",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","10","","Pond Service Test","","com.services.IPondServiceTest","getPond_shouldThrowNotFoundException_whenPondNotFound","Get Pond - Should throw NotFound when pond not found",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","11","","Pond Service Test","","com.services.IPondServiceTest","updatePond_shouldThrowAlreadyExistedException_whenPondNameExists","Update Pond - Should throw AlreadyExisted when pond name exists",""
"passed","Tue Nov 19 20:04:17 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","494","","Cart Service Test","","com.services.CartServiceTest","createCart_shouldThrowIllegalAccess_whenUserIdDoesNotMatch","Create Cart - Should throw IllegalAccess when user ID does not match",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","8","","Package Service Test","","com.services.PackageServiceTest","createPackage_ShouldCreatePackage_WhenValid","Create Package - Should create package when valid",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","7","","Water Parameter Service Test","","com.services.IWaterParameterServiceTest","getWaterQualityByPondId_shouldThrowNotFoundException_whenQualityStandardNotFound","Get Water Quality - Should throw NotFound when not found",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","33","","Image Service Test","","com.services.ImageServiceTest","uploadImage_shouldSaveImageAndReturnUrl","Upload Image - Should save image",""
"passed","Tue Nov 19 20:04:23 ICT 2024","Tue Nov 19 20:04:23 ICT 2024","44","","Order Service Test","","com.services.OrderServiceTest","cancelPendingOrder_ShouldThrowIllegalStateException_WhenOrderIsNotPending","Cancel Pending Order - Should throw IllegalStateException when order is not pending",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","8","","Package Service Test","","com.services.PackageServiceTest","getPackageById_ShouldThrowException_WhenNotExists","Get Package - Should throw exception when not exists",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","9","","Cart Service Test","","com.services.CartServiceTest","updateCart_shouldThrowNotFound_whenCartDoesNotExist","Update Cart - Should throw NotFound when cart does not exist",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","8","","Product Service Test","","com.services.ProductServiceTest","updateProduct_ShouldThrowNotFoundException_WhenProductDoesNotExist","Update Product - Should throw NotFoundException when product does not exist",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","18","","Cart Service Test","","com.services.CartServiceTest","createCart_shouldThrowNotFound_whenProductDoesNotExist","Create Cart - Should throw NotFound when product does not exist",""
"passed","Tue Nov 19 20:04:20 ICT 2024","Tue Nov 19 20:04:20 ICT 2024","782","","Koi Fish Service Test","","com.services.IKoiFishServiceTest","getKoiFishsByPondId_shouldReturnPageOfKoiFish","Get Koi Fish by User - Should return page of koi fish",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:19 ICT 2024","608","","Dashboard Service Test","","com.services.DashboardServiceTest","getUserGrowthData_shouldReturnUserGrowthData","Get User Growth Data - Return user growth data",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","10","","Product Service Test","","com.services.ProductServiceTest","createProduct_ShouldSaveProduct_WhenNoImageProvided","Create Product - Save product when no image is provided",""
"passed","Tue Nov 19 20:04:25 ICT 2024","Tue Nov 19 20:04:25 ICT 2024","4","","User Service Tests","","com.services.UserServiceTest","updatePassword_ShouldThrowNotFoundException_WhenUserDoesNotExist","Update Password - Should throw NotFoundException when user does not exist",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","8","","Pond Service Test","","com.services.IPondServiceTest","getPonds_shouldReturnListOfPonds","Get Ponds - Should return list of ponds",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","15","","Category Service Test","","com.services.CategoryServiceTest","updateCategory_shouldThrowNotFound_whenCategoryDoesNotExist","Update Category - Should throw NotFound when category does not exist",""
"passed","Tue Nov 19 20:04:19 ICT 2024","Tue Nov 19 20:04:19 ICT 2024","5","","Email Service Test","","com.services.EmailServiceTest","sendPasswordToEmail_shouldSendPasswordEmail","Send Password - Send Password Email",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","7","","Product Service Test","","com.services.ProductServiceTest","deleteProduct_ShouldThrowNotFoundException_WhenProductDoesNotExist","Delete Product - Should throw NotFoundException when product does not exist",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","181","","Category Service Test","","com.services.CategoryServiceTest","addCategory_shouldSaveCategory","Add Category - Should save the category",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","10","","Cart Service Test","","com.services.CartServiceTest","createCart_shouldThrowBadRequest_whenItemAlreadyInCart","Create Cart - Should throw BadRequest when item already in cart",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","23","","Image Service Test","","com.services.ImageServiceTest","deleteImage_shouldNotThrowException_whenImageDoesNotExist","Delete Image - Should not throw exception when image does not exist",""
"passed","Tue Nov 19 20:04:17 ICT 2024","Tue Nov 19 20:04:17 ICT 2024","103","","Blog Service Tests","","com.services.BlogServiceTest","updateBlog_shouldUpdateFields_whenValidInput","Update Blog - Should update fields when input is valid",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","5","","Water Parameter Service Test","","com.services.IWaterParameterServiceTest","saveWaterParameter_shouldThrowNotFoundException_whenPondNotFound","Save Water - Should throw NotFound when pond not found",""
"passed","Tue Nov 19 20:04:24 ICT 2024","Tue Nov 19 20:04:24 ICT 2024","7","","Package Service Test","","com.services.PackageServiceTest","deletePackage_ShouldThrowException_WhenDefaultPackage","Delete Package - Should throw Exception when deleting default package",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","8","","Pond Service Test","","com.services.IPondServiceTest","addPond_shouldThrowNotFoundException_whenUserNotFound","Add Pond - Should throw NotFound when user not found",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","8","","Cart Service Test","","com.services.CartServiceTest","clearCart_shouldThrowNotFound_whenCartIsEmpty","Clear Cart - Should throw NotFound when cart is empty",""
"passed","Tue Nov 19 20:04:23 ICT 2024","Tue Nov 19 20:04:23 ICT 2024","31","","Order Service Test","","com.services.OrderServiceTest","cancelPendingOrder_ShouldThrowNotFoundException_WhenOrderDoesNotExist","Cancel Pending Order - Should throw NotFound when order does not exist",""
"passed","Tue Nov 19 20:04:19 ICT 2024","Tue Nov 19 20:04:19 ICT 2024","8","","Dashboard Service Test","","com.services.DashboardServiceTest","getOrderStatusBreakdown_shouldReturnOrderStatusData","Get Order Status Breakdown - Return order status data",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","38","","Image Service Test","","com.services.ImageServiceTest","deleteImage_shouldDeleteImage","Delete Image - Should delete image",""
"passed","Tue Nov 19 20:04:17 ICT 2024","Tue Nov 19 20:04:17 ICT 2024","148","","Blog Service Tests","","com.services.BlogServiceTest","createBlog_shouldSaveBlog_whenValidInput","Create Blog - Should save blog when input is valid",""
"passed","Tue Nov 19 20:04:21 ICT 2024","Tue Nov 19 20:04:21 ICT 2024","7","","Pond Service Test","","com.services.IPondServiceTest","getPonds_withPagination_shouldReturnPageOfPonds","Get Pond - Should return pages of pond",""
"passed","Tue Nov 19 20:04:22 ICT 2024","Tue Nov 19 20:04:22 ICT 2024","9","","Image Service Test","","com.services.ImageServiceTest","getFileName_shouldReturnFileName","Get File Name - Should return file name",""
"passed","Tue Nov 19 20:04:20 ICT 2024","Tue Nov 19 20:04:20 ICT 2024","13","","Koi Fish Service Test","","com.services.IKoiFishServiceTest","evaluateAndUpdateKoiGrowthStatus_shouldUpdateStatus","Evaluate and Update Koi Growth Status - Should update status",""
"passed","Tue Nov 19 20:04:18 ICT 2024","Tue Nov 19 20:04:18 ICT 2024","6","","Category Service Test","","com.services.CategoryServiceTest","deleteCategory_shouldDeleteCategory_whenExists","Delete Category - Should delete the category when exists",""
